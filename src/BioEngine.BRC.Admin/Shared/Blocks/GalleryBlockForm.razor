@using BioEngine.BRC.Common.Entities.Blocks
@using BioEngine.BRC.Common
@using Sitko.Core.Storage
@using StorageItem = BioEngine.BRC.Common.Entities.StorageItem
@using System.IO
@inject IStorage<BRCStorageConfig> Storage
@inject NotificationService NotificationService

<InputFile accept="image/*" multiple OnChange="HandleSelection"/>
@if (Block.Data.Pictures.Length > 0)
{
    <div class="picturesList">
        @foreach (var picture in Block.Data.Pictures)
        {
            <div class="pic">
                <img src="@Storage.PublicUri(picture)" alt="@picture.FileName"/>
                <div @onclick="@(e => DeletePicture(picture))" class="deleteOverlay">
                    <RadzenIcon Icon="delete"></RadzenIcon>
                </div>
            </div>
        }
        <div class="addButton">
            <div @onclick="@(e => ShowSelectDialog(false))">
                <RadzenIcon Icon="add_photo_alternate"></RadzenIcon>
            </div>
        </div>
    </div>
}
else
{
    <div>
        <p style="text-align:center">Выберите одно или несколько изображений</p>
        <p style="text-align:center">
            <button color="accent" @onclick="@(e => ShowSelectDialog())">
                Выбрать
            </button>
        </p>
    </div>
}

@code
{
    [Parameter]
    public GalleryBlock Block { get; set; }

    private int Progress { get; set; }
    private string Info { get; set; }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var pictures = new List<StorageItem>();
        foreach (var file in files)
        {
            await using var stream = new MemoryStream();
            await file.Data.CopyToAsync(stream);
            pictures.Add(StorageItem.FromCore(await Storage.SaveFileAsync(stream, file.Name, "posts")));
        }
        Block.Data.Pictures = pictures.ToArray();
    }

    private void DeletePicture(StorageItem picture)
    {
        var pictures = Block.Data.Pictures.ToList();
        pictures.Remove(picture);
        Block.Data.Pictures = pictures.ToArray();
    }

    private void ShowSelectDialog(bool replace = true)
    {
        NotificationService.Notify(NotificationSeverity.Error, "Диалог выбора файлов ещё не сделан");
    }
}
